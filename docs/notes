> Build arm6 on x86
```bash
 docker run -e QEMU_CPU=arm1176 --privileged --rm -it --platform linux/arm/v6 balenalib/raspberry-pi:buster bash
# build container atrm6
docker buildx build --platform linux/arm/v6 . -t bitbot --progress string
# run it, have to specify which chip QEMU should emulate
docker run -e QEMU_CPU=arm1176 --privileged --rm -t --platform linux/arm/v6 navikey/raspbian-buster:latest bash

# remove all containers
docker container rm $(docker container ls -q -a)
#' which cpus to use for the build 
--cpuset-cpus=0-3'
# wifi-connect docker pull balenablocks/wifi-connect:rpi
docker run --network=host -v /run/dbus/:/run/dbus/ balenablocks/wifi-connect:rpi

# errors i have seen
# error: failed to solve: failed to solve with frontend dockerfile.v0: failed to create LLB definition: rpc error: code = Unknown desc = error getting credentials - err: exit status 255, out: ``
In ~/.docker/config.json change credsStore to credStore

```

# run and output to text file
`docker run -it hello-world > ./test.txt 2>&1`

> piwheels can be ignored per-package
```bash
# this will build grpcio from source, but not tensorflow
sudo pip3 install tensorflow --no-binary grpcio
# set pip global vars
pip config set --user global.index-url https://www.piwheels.org/simple/
```

> get linux os version
```sh
cat /etc/os-release
```

>enable vnc raspiconfig
```sh
sudo raspi-config nonint do_vnc 0
```

> setup my git
```sh
# setup user
git config --global user.email ccbing@gmail.com
git config --global user.name donbing
# tell git to cache creds after first auth
git config --global credential.helper store
# remove creds
git config --global --unset user.password
# aliases
 git config --global alias.co checkout
 git config --global alias.br branch
 git config --global alias.ci commit
 git config --global alias.st status
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
 
> wifi manager
https://github.com/txn2/txwifi#disable-wpa_supplicant-on-raspberry-pi

```
    docker run --rm --privileged --net host \
      -v $(pwd)/wificfg.json:/cfg/wificfg.json \
      -v "/etc/wpa_supplicant/wpa_supplicant.conf":"/etc/wpa_supplicant/wpa_supplicant.conf" \
      cjimti/iotwifi
```


> check cpu arch 
`dpkg --print-architecture`


sudo apt install python3-gi gobject-introspection gir1.2-gtk-3.0 -y